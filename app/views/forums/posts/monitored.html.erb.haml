- @page_title = "Posts that {user} is monitoring"[:posts_user_is_monitoring, h(@user.display_name)]
- content_for :right do
  %h4
    = "{name}'s Monitored Topics"[:users_monitored_topics, link_to(h(@user.display_name), user_path(@user))]
  %ul.flat
    - @user.monitored_topics.find(:all, :limit => 25).each do |topic|
      %li
        = link_to topic.title, forums_forum_topic_path(topic.forum_id, topic)
%h1
  = @page_title
/
  No RSS for now
  <p class="subtitle">
  <haml:silent># feed_icon_tag @page_title, monitored_posts_path(:user_id =&amp;gt; @user, :format =&amp;gt; 'rss') </haml:silent>
  <haml:silent># '{count} post(s) found'[(count=@posts.total_entries)==1 ? :post_count_found : :posts_count_found, number_with_delimiter(count)] </haml:silent>
  </p>
= will_paginate @posts
%table.posts.wide{ :cellspacing => "0", :border => "0", :cellpadding => "0" }
  - for post in @posts do
    - unless post == @posts.first
      %tr.spacer
        %td{ :colspan => "2" }
          \&nbsp;
    %tr.post.hentry{ :id => dom_id post }
      %td.author.vcard
        .date
          %abbr.updated{ :title => post.created_at.xmlschema }
            - if post.created_at > Time.now.utc-24.hours
            = time_ago_in_words(post.created_at).sub(/about /, '')
            - else
            = post.created_at.strftime("%b %e, %Y"[:date_format])
            - end
        = avatar_for post.user
        %span.fn
          = link_to truncate(h(post.user.display_name), 15), user_path(post.user), :class => (post.user == @posts.first.user ? "admin" : nil)
        %span.posts
          = '{count} post(s)'[(count=post.user.posts.size)==1 ? :post_count : :posts_count, number_with_delimiter(count)]
      %td.body.entry-content
        %p.topic
          = t("savage_beast.topic_title")
          \:
          = link_to h(post.topic_title), forums_forum_topic_path(post.forum_id, post.topic_id)
        = post.body_html
= will_paginate @posts

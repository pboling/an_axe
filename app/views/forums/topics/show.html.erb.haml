- @page_title = @topic.title
- @monitoring = logged_in? && !Monitorship.count(:id, :conditions => ['user_id = ? and topic_id = ? and active = ?', current_user.id, @topic.id, true]).zero?
- content_for :right do
  %h5
    = t("savage_beast.voices_title")
  %ul.flat.talking
    - @topic.voices.each do |user|
      %li
        = link_to h(user.display_name), user_path(user)
- if logged_in?
  - form_tag forums_forum_topic_monitorship_path(@forum, @topic), :style => 'margin-top:0em; float:right;' do
    %div
      - mon =  @monitoring ? true : false
      =check_box_tag "monitor", '', mon, :onclick => js_for_monitor
      %label#monitor_label{ :for => "monitor_checkbox" }
        = @monitoring ? 'Monitoring topic' : 'Monitor topic'
      = hidden_field_tag '_method', 'delete' if @monitoring
      = submit_tag :Set, :id => 'monitor_submit'
.crumbs
  = link_to t("savage_beast.forums_title"), forums_forums_path
  %span.arrow
    \&rarr;
  = link_to h(@topic.forum.name), forums_forum_path(@topic.forum)
  - page=session[:forum_page] ? session[:forum_page][@topic.forum.id] : nil
  - if page and page!=1
    %small{ :style => "color:#ccc" }
      (
      = link_to 'page {page}'[:page, page], forums_forum_path(:id => @topic.forum, :page => page)
      )
  %span.arrow
    \&rarr;
%h1{ show_mods, :id => "topic-title", :style => "margin-top:0.5em;"}
  = h @topic.title
  - if @topic.locked?
    %span
      (
      = t('savage_beast.locked')
      )
  - if logged_in?
    %span#topic_mod{ :style => "display:none;" }
      - if @topic.editable_by?(current_user)
        = link_to(t('savage_beast.edit_topic'), edit_forums_forum_topic_path(@forum, @topic), :class => "utility")
        |
        = link_to(t('savage_beast.delete_topic'), forums_forum_topic_path(@forum, @topic), :class => "utility", :method => :delete, :confirm => t("savage_beast.delete_topic_conf"))
/
  No RSS for now
  <p class="subtitle">
  <haml:silent># feed_icon_tag @topic.title, forums_forum_topic_path(@forum, @topic, :format =&amp;gt; :rss) </haml:silent>
  <haml:silent># '{count} post(s)'[(count=@topic.posts.size)==1 ? :post_count : :posts_count, number_with_delimiter(count)] </haml:silent>,
  <haml:silent># '{count} voice(s)'[(count=@topic.voices.size)==1 ? :voice_count : :voices_count, number_with_delimiter(count)] </haml:silent>
  </p>
= will_paginate @posts
%a{ :name => dom_id(@posts.first), :id => dom_id(@posts.first) }
  \&nbsp;
%table.posts.wide{ :cellspacing => "0", :border => "0", :cellpadding => "0" }
  - for post in @posts do
    - unless post == @posts.first
      %tr.spacer
        %td{ :colspan => "2" }
          %a{ :name => dom_id(post), :id => dom_id(post) }
            \&nbsp;
    %tr.post.hentry{ :id => "#{dom_id post}-row" }
      %td.author.vcard
        .date
          %a{ :href => "##{dom_id post}", :rel => "bookmark" }
            %abbr.updated{ :title => post.created_at.xmlschema }
              = time_ago_in_words(post.created_at)
        = avatar_for post.user
        %span.fn
          = link_to truncate(h(post.user.display_name), :length => 15), user_path(post.user), :class => (post.user == @posts.first.user ? "threadauthor" : nil)
        - if post.user.admin? or post.forum.moderators.include?(post.user)
          %span.admin
            - if post.user.admin?
              = t("savage_beast.administrator_title")
            - elsif post.forum.moderators.include?(post.user)
              = t("savage_beast.moderator_title")
        %span.posts
          = post_count post.user.posts.size
        - if logged_in? && post.editable_by?(current_user)
          %p
            %span.edit
              = ajax_spinner_for "edit-post-#{post.id}", "spinner_bounce.gif"
              = link_to_remote(t('savage_beast.edit_post'),  {:url => edit_forums_post_path(:forum_id => @forum, :topic_id => @topic, :id => post), :method => :get, :before => "EditForm.init(#{post.id});", :condition => "!EditForm.isEditing(#{post.id})" },  {:href => edit_forums_post_path(:forum_id => @forum, :topic_id => @topic, :id => post, :page => params[:page]), :class => "utility"})
        - unless post.body_list.empty?
          #tags
            Tags:
            = post.body_list
      %td.body.entry-content{ :id => "post-body-#{post.id}" }
        /
          <haml:loud> link_to_function image_tag('clearbits/comment.gif', :class =&amp;gt; 'icon reply'), &amp;quot;$('reply').toggle()&amp;quot; if logged_in? </haml:loud>
        = post.body_html
= will_paginate @posts
- if logged_in?
  #edit
  - if @topic.locked?
    %p
      = image_tag "savage_beast/clearbits/lock.gif", :class => "icon grey", :title => t("savage_beast.topic_locked_title")
    %label
      = t("savage_beast.locked_topic")
  - else
    %p
      = link_to_function t("savage_beast.reply_to_topic"), "ReplyForm.init()", :class => "utility"
    #reply.editbox
      .container
        = content_tag 'p', h(flash[:bad_reply]), :class => 'notice' if flash[:bad_reply]
        - form_for :post, :url => forums_posts_path(:forum_id => @forum, :topic_id => @topic, :page => @topic.last_page) do |f|
          %table{ :cellspacing => "0", :border => "0", :width => "100%", :cellpadding => "0" }
          %tr
            %td
              = f.text_area :body, :rows => 4
          %tr
            %td
              %label
                Tags:
              = f.text_field :body_list
          %tr
            %td{ :valign => "top" }
              %h5
                = t('savage_beast.formatting_help')
              %ul.help
                %li
                  = t("savage_beast.formatting_bold")
                  = t("savage_beast.formatting_italics")
                  %br
                  = t("savage_beast.formatting_blockquote")
                %li
                  "IBM":http://www.ibm.com
                %li
                  = t("savage_beast.formatting_list")
          %tr
            %td{ :valign => "bottom", :style => "padding-bottom:15px;" }
              = submit_tag t("savage_beast.save_reply")
              %span.button_or
                or
                = link_to_function t('savage_beast.cancel'), "$('reply').hide()"
= javascript_tag "$('reply').hide();"
.crumbs{ :style => "margin-top:1.1em;" }
  = link_to t("savage_beast.forums_title"), forums_forums_path
  %span.arrow
    \&rarr;
  = link_to h(@topic.forum.name), forums_forum_path(@topic.forum)
  %span.arrow
    \&rarr;
